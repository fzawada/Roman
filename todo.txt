Main objective 1: translate integers to roman numerals
v write an acceptance test first
v [algo main step 1] split numbers into a list of powers of ten
v create an interface of the above mentioned decimal factorizer
v implement the factorizer

v [algo main step 2] translate each part into corresponding roman representation
v implement decimal factor
v implement roman numerals symbol
- (?) get rid of magic strings and replace them with a proper RomanNumeralSymbol impl

v [algo final step] join the resulting roman parts to get the final result



=================
Main objective 2: translate roman to integers
v write an acceptance test first
v [algo main step1] validate input string
  v do not use the same symbol more than three times
  v make sure there are no invalid characters in the input string
  v RomanNumeralSymbol's XUnitForExponent methods should return RomanNumeralSymbols instead of magic strings
  v only powers of ten can be subtracted
  v only one number can be subtracted from another
  v cannot subtract a number from one that is more than ten times bigger
v accept RomanNumber instead of a string (to e.g. avoid casing issues)

v [algo main step2] walk the roman number and add/subtract values corresponding to symbols